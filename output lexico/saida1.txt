1 IDE const
1 DEL {
1 PRE int
1 IDE biruley
1 ART =
1 NRO 3
1 DEL ,
1 IDE s
1 ART =
1 NRO 5
1 DEL ,
1 IDE dww
1 ART =
1 NRO 9
1 DEL ;
2 PRE boolean
2 IDE rr
2 ART =
2 PRE false
2 DEL ;
3 PRE string
3 IDE f
3 ART =
3 CDC "ds"
3 DEL ;
4 PRE int
4 IDE ea
4 ART =
4 NRO 2
4 DEL ;
5 PRE real
5 IDE x8
5 ART =
5 NRO 3.14
5 DEL ;
7 DEL }
8 PRE var
8 DEL {
8 PRE int
8 IDE birulau
8 DEL ,
8 IDE concrete
8 DEL ;
9 PRE string
9 IDE BLZ
9 DEL ;
10 PRE string
10 IDE BLZ
10 DEL ;
11 PRE boolean
11 IDE aux
11 DEL ;
12 PRE real
12 IDE aux
12 DEL ;
13 PRE int
13 IDE log
13 DEL ;
14 PRE int
14 IDE array
14 DEL [
14 NRO -3
14 DEL ]
14 DEL ;
15 PRE int
15 IDE matriz
15 DEL [
15 NRO 82
15 DEL ]
15 DEL [
15 NRO 22
15 DEL ]
15 DEL ,
15 IDE matriz
15 DEL [
15 NRO -2
15 DEL ]
15 DEL [
15 NRO 3
15 DEL ]
15 DEL ;
16 PRE typedef
16 PRE struct
16 IDE structdd
16 PRE extends
16 IDE structdd1
16 DEL {
16 PRE var
16 DEL {
16 PRE int
16 IDE j
16 DEL ;
16 DEL }
16 DEL }
17 PRE struct
17 IDE structdd1
17 DEL {
17 PRE var
17 DEL {
17 PRE int
17 IDE j
17 DEL ;
17 DEL }
17 DEL }
18 PRE typedef
18 PRE struct
18 IDE structxandAviao
18 PRE extends
18 IDE cleitonRasta
18 DEL {
19 PRE var
19 DEL {
19 PRE boolean
19 IDE dsa
19 DEL ;
19 DEL }
19 DEL }
<<<<<<< HEAD
20 DEL }
23 PRE procedure
23 PRE start
23 DEL (
23 PRE int
23 IDE w
23 DEL )
23 DEL {
24 PRE var
24 DEL {
24 PRE int
24 IDE j
24 DEL ;
25 PRE string
25 IDE stringIndexArray
25 DEL ;
26 PRE struct
26 IDE structStart
=======
20 PRE typedef
20 PRE struct
20 IDE structxandAviao
20 PRE extends
20 IDE cleitonRasta
20 DEL {
21 PRE var
21 DEL {
21 PRE boolean
21 IDE dsa
21 DEL ;
21 DEL }
21 DEL }
22 PRE struct
22 IDE groot
22 DEL {
23 PRE var
23 DEL {
23 PRE int
23 IDE i
23 DEL ;
23 DEL }
25 DEL }
26 PRE typedef
26 PRE struct
26 IDE euSou
26 PRE extends
26 IDE groot
>>>>>>> 077f6982fc5cfee5a00bd1eacc1258e9f66076c7
26 DEL {
27 PRE var
27 DEL {
27 PRE int
<<<<<<< HEAD
27 IDE x
27 DEL ;
28 PRE int
28 IDE daas
28 DEL [
28 NRO 3
28 DEL ]
=======
27 IDE i
27 DEL ;
<<<<<<< HEAD
27 DEL }
28 DEL {
29 DEL }
32 PRE procedure
32 PRE start
32 DEL (
32 PRE int
32 IDE w
32 DEL )
32 DEL {
33 PRE var
33 DEL {
33 PRE int
33 IDE j
33 DEL ;
34 PRE int
34 IDE j
34 DEL ;
35 PRE struct
35 IDE structStart
35 DEL {
36 PRE var
36 DEL {
36 PRE int
36 IDE x
36 DEL ;
36 DEL }
37 DEL }
38 PRE struct
38 IDE structStart
38 DEL {
39 PRE var
39 DEL {
39 PRE int
39 IDE ttt
39 DEL ;
39 DEL }
40 DEL }
41 DEL }
42 PRE read
42 DEL (
42 IDE a
42 DEL )
42 DEL ;
43 PRE print
43 DEL (
43 IDE a
43 DEL )
43 DEL ;
44 IDE i
44 ART =
44 NRO 5
44 DEL ;
48 PRE while
48 DEL (
48 IDE i
48 ART ==
48 IDE j
48 DEL )
48 DEL {
50 DEL }
52 PRE if
52 DEL (
52 IDE i
52 ART ==
52 IDE j
52 DEL )
52 PRE then
52 DEL {
53 PRE read
53 DEL (
53 IDE a
53 DEL )
53 DEL ;
55 DEL }
55 PRE else
55 DEL {
57 DEL }
59 DEL }
60 PRE procedure
60 PRE start
60 DEL (
60 PRE int
60 IDE x
60 DEL )
60 DEL {
61 PRE var
61 DEL {
61 DEL }
63 DEL }
65 PRE function
65 PRE int
65 IDE fnctsss
65 DEL (
65 PRE int
65 IDE t
65 DEL ,
65 PRE string
65 IDE d
65 DEL )
=======
28 PRE string
28 IDE stringIndexArray
>>>>>>> 077f6982fc5cfee5a00bd1eacc1258e9f66076c7
28 DEL ;
29 DEL }
30 DEL }
31 PRE struct
31 IDE structStart
31 DEL {
32 PRE var
32 DEL {
32 PRE int
32 IDE ttt
32 DEL ;
32 DEL }
33 DEL }
34 DEL }
35 PRE read
35 DEL (
35 IDE naoDeclarada
35 DEL )
35 DEL ;
36 PRE print
36 DEL (
36 IDE naoDeclarada
36 DEL )
36 DEL ;
37 PRE global
37 DEL .
37 IDE log
37 ART =
37 IDE j
37 DEL ;
40 IDE structStart
40 DEL .
40 IDE daas
40 DEL [
40 NRO 3
40 DEL ]
40 ART =
40 IDE j
40 DEL ;
42 PRE while
42 DEL (
42 IDE j
42 ART ==
42 IDE j
42 DEL )
42 DEL {
44 DEL }
46 PRE if
46 DEL (
46 IDE j
46 ART ==
46 IDE j
46 DEL )
46 PRE then
46 DEL {
47 PRE read
47 DEL (
47 IDE v
47 DEL )
47 DEL ;
49 DEL }
49 PRE else
49 DEL {
51 DEL }
53 DEL }
55 PRE function
55 PRE int
55 IDE fnctsss
55 DEL (
55 PRE int
55 IDE t
55 DEL ,
55 PRE string
55 IDE d
55 DEL )
55 DEL {
56 PRE var
56 DEL {
56 PRE int
56 IDE ggg
56 DEL ;
57 PRE int
<<<<<<< HEAD
57 IDE vet
57 DEL [
57 NRO 2
57 DEL ]
57 DEL ;
58 PRE string
58 IDE sout
58 DEL ;
59 PRE struct
59 IDE structxx
59 DEL {
60 PRE var
60 DEL {
60 PRE int
60 IDE testaEscopo
60 DEL ;
61 PRE int
61 IDE c
61 DEL [
61 NRO 3
61 DEL ]
61 DEL ;
61 DEL }
62 DEL }
65 DEL }
67 IDE vet
67 DEL [
67 IDE ggg
67 DEL ]
67 ART =
67 NRO 22
67 DEL ;
69 PRE return
69 CDC "fdf"
69 DEL ;
70 DEL }
=======
57 IDE x
57 DEL )
57 DEL {
58 PRE var
58 DEL {
58 DEL }
60 DEL }
62 PRE function
62 PRE int
62 IDE fnctsss
62 DEL (
62 PRE int
62 IDE t
62 DEL ,
62 PRE string
62 IDE d
62 DEL )
62 DEL {
63 PRE var
63 DEL {
63 PRE int
63 IDE ggg
63 DEL ;
64 PRE int
64 IDE vet
64 DEL [
64 NRO 2
64 DEL ]
64 DEL ;
65 PRE struct
65 IDE sctructxx
>>>>>>> ae2c560ea4f1cf25196a51ecebe3e6a94f6431c4
65 DEL {
66 PRE var
66 DEL {
66 PRE int
<<<<<<< HEAD
66 IDE ggg
66 DEL ;
67 PRE int
67 IDE vet
67 DEL [
67 NRO 2
67 DEL ]
67 DEL ;
68 PRE struct
68 IDE sctructxx
68 DEL {
69 PRE var
69 DEL {
69 PRE int
69 IDE testaEscopo
69 DEL ;
69 DEL }
70 DEL }
72 DEL }
73 PRE read
73 DEL (
73 IDE a
73 DEL )
73 DEL ;
74 PRE print
74 DEL (
74 IDE a
74 DEL )
74 DEL ;
75 IDE i
75 ART =
75 NRO 5
75 DEL ;
79 PRE while
79 DEL (
79 IDE i
79 ART ==
79 NRO 5
79 DEL )
79 DEL {
81 DEL }
83 PRE if
83 DEL (
83 IDE i
83 ART ==
83 IDE j
83 DEL )
83 PRE then
83 DEL {
84 PRE read
84 DEL (
84 IDE a
84 DEL )
84 DEL ;
86 DEL }
86 PRE else
86 DEL {
88 DEL }
89 PRE return
89 PRE global
89 DEL .
89 IDE log
89 DEL ;
90 DEL }
92 PRE function
92 PRE boolean
92 IDE funct2
92 DEL (
92 PRE boolean
92 IDE x
92 DEL ,
92 PRE int
92 IDE aux
92 DEL ,
92 IDE char
92 IDE t
92 DEL )
92 DEL {
93 PRE var
93 DEL {
93 PRE int
93 IDE tameImpala
93 DEL ;
93 DEL }
95 PRE return
95 PRE true
95 DEL ;
96 DEL }
=======
66 IDE testaEscopo
66 DEL ;
66 DEL }
67 DEL }
69 DEL }
70 PRE read
70 DEL (
70 IDE naoDeclarada
70 DEL )
70 DEL ;
71 PRE print
71 DEL (
71 IDE naoDeclarada
71 DEL )
71 DEL ;
72 IDE naoDeclarada
72 ART =
72 IDE ggg
72 DEL ;
73 IDE ggg
73 ART =
73 CDC "dsds"
73 DEL ;
76 PRE while
76 DEL (
76 IDE naoDeclarada
76 ART ==
76 NRO 5
76 DEL )
76 DEL {
78 DEL }
80 PRE if
80 DEL (
80 IDE naoDeclarada
80 ART ==
80 IDE j
80 DEL )
80 PRE then
80 DEL {
81 PRE read
81 DEL (
81 IDE naoDeclarada
81 DEL )
81 DEL ;
83 DEL }
83 PRE else
83 DEL {
85 DEL }
86 PRE return
86 PRE global
86 DEL .
86 IDE log
86 DEL ;
87 DEL }
89 PRE function
89 PRE boolean
89 IDE funct2
89 DEL (
89 PRE boolean
89 IDE x
89 DEL ,
89 PRE int
89 IDE aux
89 DEL ,
89 IDE char
89 IDE t
89 DEL )
89 DEL {
90 PRE var
90 DEL {
90 PRE int
90 IDE tameImpala
90 DEL ;
90 DEL }
92 PRE return
92 PRE true
92 DEL ;
93 DEL }
>>>>>>> ae2c560ea4f1cf25196a51ecebe3e6a94f6431c4
>>>>>>> 077f6982fc5cfee5a00bd1eacc1258e9f66076c7

Sem erros LÃ©xicos