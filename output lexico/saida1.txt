1 IDE const
1 DEL {
1 PRE int
1 IDE biruley
1 ART =
1 NRO 3
1 DEL ,
1 IDE s
1 ART =
1 NRO 5
1 DEL ,
1 IDE dww
1 ART =
1 NRO 9
1 DEL ;
2 PRE string
2 IDE ea
2 ART =
2 PRE true
2 DEL ;
3 PRE boolean
3 IDE rr
3 ART =
3 PRE false
3 DEL ;
4 PRE string
4 IDE f
4 ART =
4 CDC "ds"
4 DEL ;
5 PRE int
5 IDE ea
5 ART =
5 NRO 2
5 DEL ;
6 PRE string
6 IDE rr
6 ART =
6 CDC "D"
6 DEL ;
7 PRE real
7 IDE x8
7 ART =
7 NRO 3.14
7 DEL ;
9 DEL }
10 PRE var
10 DEL {
10 PRE int
10 IDE birulau
10 DEL ,
10 IDE concrete
10 DEL ;
11 PRE string
11 IDE BLZ
11 DEL ;
12 PRE string
12 IDE BLZ
12 DEL ;
13 PRE boolean
13 IDE aux
13 DEL ;
14 PRE real
14 IDE aux
14 DEL ;
15 PRE int
15 IDE log
15 DEL ;
16 PRE int
16 IDE array
16 DEL [
16 NRO 2
16 DEL ]
16 DEL ,
16 IDE array
16 DEL [
16 NRO -3
16 DEL ]
16 DEL ;
17 PRE int
17 IDE matriz
17 DEL [
17 NRO 82
17 DEL ]
17 DEL [
17 NRO 22
17 DEL ]
17 DEL ,
17 IDE matriz
17 DEL [
17 NRO -2
17 DEL ]
17 DEL [
17 NRO 3
17 DEL ]
17 DEL ;
18 PRE typedef
18 PRE struct
18 IDE structdd
18 PRE extends
18 IDE structdd1
18 DEL {
18 PRE var
18 DEL {
18 PRE int
18 IDE j
18 DEL ;
18 DEL }
18 DEL }
19 PRE struct
19 IDE structdd1
19 DEL {
19 PRE var
19 DEL {
19 PRE int
19 IDE j
19 DEL ;
19 DEL }
19 DEL }
20 PRE typedef
20 PRE struct
20 IDE structxandAviao
20 PRE extends
20 IDE cleitonRasta
20 DEL {
21 PRE var
21 DEL {
21 PRE boolean
21 IDE dsa
21 DEL ;
21 DEL }
21 DEL }
23 DEL }
26 PRE procedure
26 PRE start
26 DEL (
26 DEL )
26 DEL {
27 PRE var
27 DEL {
27 PRE int
27 IDE j
27 DEL ;
28 PRE int
28 IDE j
28 DEL ;
29 PRE string
29 IDE stringIndexArray
29 DEL ;
30 PRE struct
30 IDE structStart
30 DEL {
31 PRE var
31 DEL {
31 PRE int
31 IDE x
31 DEL ;
32 PRE string
32 IDE cs
32 DEL ;
33 PRE int
33 IDE daas
33 DEL [
33 NRO 3
33 DEL ]
33 DEL ;
34 DEL }
35 DEL }
36 PRE struct
36 IDE structStart
36 DEL {
37 PRE var
37 DEL {
37 PRE int
37 IDE ttt
37 DEL ;
37 DEL }
38 DEL }
39 PRE int
39 IDE dog
39 DEL [
39 NRO 5
39 DEL ]
39 DEL ;
40 DEL }
41 PRE read
41 DEL (
41 IDE naoDeclarada
41 DEL )
41 DEL ;
42 PRE print
42 DEL (
42 IDE naoDeclarada
42 DEL )
42 DEL ;
43 PRE global
43 DEL .
43 IDE naoDeclarada
43 ART =
43 IDE j
43 DEL ;
44 PRE global
44 DEL .
44 IDE naoDeclarada
44 ART =
44 NRO 3
44 DEL ;
45 PRE global
45 DEL .
45 IDE naoDeclarada
45 ART =
45 CDC "dsd"
45 DEL ;
46 PRE global
46 DEL .
46 IDE naoDeclarada
46 ART =
46 PRE true
46 DEL ;
47 PRE global
47 DEL .
47 IDE naoDeclarada
47 ART =
47 NRO 3.14
47 DEL ;
49 IDE structStart
49 DEL .
49 IDE daas
49 DEL [
49 IDE stringIndexArray
49 DEL ]
49 ART =
49 IDE j
49 DEL ;
50 IDE dog
50 DEL [
50 IDE structStart
50 DEL .
50 IDE daas
50 DEL [
50 IDE j
50 DEL ]
50 DEL ]
50 ART =
50 IDE stringIndexArray
50 DEL ;
51 IDE structStart
51 DEL .
51 IDE daas
51 DEL [
51 IDE stringIndexArray
51 DEL ]
51 ART =
51 CDC "dsds"
51 DEL ;
52 IDE show
52 DEL (
52 IDE j
52 DEL )
52 DEL ;
54 PRE while
54 DEL (
54 IDE j
54 ART ==
54 IDE j
54 DEL )
54 DEL {
56 DEL }
58 PRE if
58 DEL (
58 IDE j
58 ART ==
58 IDE j
58 DEL )
58 PRE then
58 DEL {
59 PRE read
59 DEL (
59 IDE j
59 DEL )
59 DEL ;
61 DEL }
61 PRE else
61 DEL {
63 DEL }
65 DEL }
68 PRE function
68 PRE int
68 IDE show
68 DEL (
68 PRE int
68 IDE bad
68 DEL )
68 DEL {
69 PRE var
69 DEL {
69 PRE int
69 IDE x
69 DEL ;
70 PRE int
70 IDE x
70 DEL ;
71 PRE string
71 IDE vd
71 DEL ;
72 PRE struct
72 IDE iron
72 DEL {
73 PRE var
73 DEL {
73 PRE int
73 IDE inteiro
73 DEL ;
74 PRE string
74 IDE cdc
74 DEL ;
75 DEL }
76 DEL }
77 DEL }
79 IDE bad
79 ART =
79 IDE vd
79 DEL ;
81 PRE return
81 IDE retornoInt
81 DEL (
81 IDE vd
81 DEL )
81 DEL ;
82 DEL }
84 PRE function
84 PRE int
84 IDE retornoInt
84 DEL (
84 PRE int
84 IDE xc
84 DEL )
84 DEL {
85 PRE var
85 DEL {
85 DEL }
86 PRE return
86 NRO 0
86 DEL ;
87 DEL }
89 PRE function
89 PRE string
89 IDE fstring
89 DEL (
89 PRE string
89 IDE x
89 DEL )
89 DEL {
90 PRE var
90 DEL {
92 DEL }
93 PRE return
93 CDC "fsdfds"
93 DEL ;
94 DEL }

Sem erros LÃ©xicos