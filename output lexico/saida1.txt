1 IDE const
1 DEL {
1 PRE int
1 IDE biruley
1 ART =
1 NRO 3
1 DEL ,
1 IDE s
1 ART =
1 NRO 5
1 DEL ,
1 IDE dww
1 ART =
1 NRO 9
1 DEL ;
2 PRE boolean
2 IDE rr
2 ART =
2 PRE false
2 DEL ;
3 PRE string
3 IDE f
3 ART =
3 CDC "ds"
3 DEL ;
4 PRE int
4 IDE ea
4 ART =
4 NRO 2
4 DEL ;
5 PRE real
5 IDE x8
5 ART =
5 NRO 3.14
5 DEL ;
7 DEL }
8 PRE var
8 DEL {
8 PRE int
8 IDE birulau
8 DEL ,
8 IDE concrete
8 DEL ;
9 PRE string
9 IDE BLZ
9 DEL ;
10 PRE string
10 IDE BLZ
10 DEL ;
11 PRE boolean
11 IDE aux
11 DEL ;
12 PRE real
12 IDE aux
12 DEL ;
13 PRE int
13 IDE log
13 DEL ;
14 PRE int
14 IDE array
14 DEL [
14 NRO -3
14 DEL ]
14 DEL ;
15 PRE int
15 IDE matriz
15 DEL [
15 NRO 82
15 DEL ]
15 DEL [
15 NRO 22
15 DEL ]
15 DEL ,
15 IDE matriz
15 DEL [
15 NRO -2
15 DEL ]
15 DEL [
15 NRO 3
15 DEL ]
15 DEL ;
16 PRE typedef
16 PRE struct
16 IDE structdd
16 PRE extends
16 IDE structdd1
16 DEL {
16 PRE var
16 DEL {
16 PRE int
16 IDE j
16 DEL ;
16 DEL }
16 DEL }
17 PRE struct
17 IDE structdd1
17 DEL {
17 PRE var
17 DEL {
17 PRE int
17 IDE j
17 DEL ;
17 DEL }
17 DEL }
18 PRE typedef
18 PRE struct
18 IDE structxandAviao
18 PRE extends
18 IDE cleitonRasta
18 DEL {
19 PRE var
19 DEL {
19 PRE boolean
19 IDE dsa
19 DEL ;
19 DEL }
19 DEL }
20 DEL }
23 PRE procedure
23 PRE start
23 DEL (
23 PRE int
23 IDE w
23 DEL )
23 DEL {
24 PRE var
24 DEL {
24 PRE int
24 IDE j
24 DEL ;
25 PRE string
25 IDE stringIndexArray
25 DEL ;
26 PRE struct
26 IDE structStart
26 DEL {
27 PRE var
27 DEL {
27 PRE int
27 IDE x
27 DEL ;
28 PRE int
28 IDE daas
28 DEL [
28 NRO 3
28 DEL ]
28 DEL ;
29 DEL }
30 DEL }
31 PRE struct
31 IDE structStart
31 DEL {
32 PRE var
32 DEL {
32 PRE int
32 IDE ttt
32 DEL ;
32 DEL }
33 DEL }
34 DEL }
35 PRE read
35 DEL (
35 IDE naoDeclarada
35 DEL )
35 DEL ;
36 PRE print
36 DEL (
36 IDE naoDeclarada
36 DEL )
36 DEL ;
37 PRE global
37 DEL .
37 IDE log
37 ART =
37 IDE j
37 DEL ;
40 IDE structStart
40 DEL .
40 IDE daas
40 DEL [
40 NRO 3
40 DEL ]
40 ART =
40 IDE j
40 DEL ;
42 PRE while
42 DEL (
42 IDE j
42 ART ==
42 IDE j
42 DEL )
42 DEL {
44 DEL }
46 PRE if
46 DEL (
46 IDE j
46 ART ==
46 IDE j
46 DEL )
46 PRE then
46 DEL {
47 PRE read
47 DEL (
47 IDE v
47 DEL )
47 DEL ;
49 DEL }
49 PRE else
49 DEL {
51 DEL }
53 DEL }
55 PRE function
55 PRE int
55 IDE fnctsss
55 DEL (
55 PRE int
55 IDE t
55 DEL ,
55 PRE string
55 IDE d
55 DEL )
55 DEL {
56 PRE var
56 DEL {
56 PRE int
56 IDE ggg
56 DEL ;
57 PRE int
57 IDE vet
57 DEL [
57 NRO 2
57 DEL ]
57 DEL ;
58 PRE string
58 IDE sout
58 DEL ;
59 PRE struct
59 IDE structxx
59 DEL {
60 PRE var
60 DEL {
60 PRE int
60 IDE testaEscopo
60 DEL ;
61 PRE int
61 IDE c
61 DEL [
61 NRO 3
61 DEL ]
61 DEL ;
61 DEL }
62 DEL }
65 DEL }
67 IDE vet
67 DEL [
67 IDE ggg
67 DEL ]
67 ART =
67 NRO 22
67 DEL ;
69 PRE return
69 CDC "fdf"
69 DEL ;
70 DEL }

Sem erros LÃ©xicos