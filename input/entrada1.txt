const { int biruley = 3, s = 5, dww = 9;
	string ea = true;
	boolean rr = false;
	string f = "ds";
	int ea = 2;
	string rr = "D";
	real x8 = 3.14;
		
}
var { int birulau, concrete;
      string BLZ;
      string BLZ;
      boolean aux;
      real aux;
	  int log;
      int array[2], array[-3];
      int matriz[82][22], matriz[-2][3]; 
      typedef struct structdd extends structdd1{ var { int j;} }
      struct structdd1 { var { int j;} }
      typedef struct structxandAviao extends cleitonRasta{
      var { boolean dsa;} }  
     
}


procedure start(){
       var { int j;
			 int j;
			 string stringIndexArray;
			struct structStart {
			  var{int x;
			  string cs;
			   int daas[3];
			   }
			}
			struct structStart {
			var{int ttt;}
			}
			int dog[5];
			}
	   read(naoDeclarada);
	   print(naoDeclarada);
	   global.naoDeclarada = j;
	   global.naoDeclarada = 3;
	   global.naoDeclarada = "dsd";
	   global.naoDeclarada = true;
	   global.naoDeclarada = 3.14;
	   
	   structStart.daas[stringIndexArray] = j;
	   dog[structStart.daas[j]] = stringIndexArray;
	   structStart.daas[stringIndexArray] = "dsds";
	   //global.log = show(2);
	   show(j);
	   
        while(j == j){
		 
		} 
		
		if(j == j)then{
		 read(j);
		
		}else{
		
		}	
	
}


function int show(int bad){
var{int x;
    int x;
	string vd;
	struct iron{
	var{int inteiro;
	string cdc;
	}
	}
	}
	
	bad = vd;
	
return retornoInt(vd);
}

function int retornoInt(int xc){
var{}
return 0;
}

function string fstring(string x){
var{

}
return "fsdfds";
}






